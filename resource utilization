import psutil
import time
from transformers import T5Tokenizer, T5ForConditionalGeneration

tokenizer = T5Tokenizer.from_pretrained("t5-base")
model = T5ForConditionalGeneration.from_pretrained("t5-base")

input_text = "Generate a regulatory document based on the following data..."
input_ids = tokenizer.encode(input_text, return_tensors="pt")

start_time = time.time()
start_cpu = psutil.cpu_percent(interval=None)
start_memory = psutil.virtual_memory().percent

output_ids = model.generate(input_ids)

end_time = time.time()
end_cpu = psutil.cpu_percent(interval=None)
end_memory = psutil.virtual_memory().percent

execution_time = end_time - start_time
cpu_usage = end_cpu - start_cpu
memory_usage = end_memory - start_memory

print(f"Execution Time: {execution_time} seconds")
print(f"CPU Usage: {cpu_usage}%")
print(f"Memory Usage: {memory_usage}%")
